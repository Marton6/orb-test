version: 2.1

# add your orb below, to be used in integration tests (note: a @dev:alpha
# release must exist.);
orbs:
  test-s: marton/test-s@dev:alpha
  orb-tools: circleci/orb-tools@9.0

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

jobs:
  # This job is an example of an integration testing job.
  # This job should execute a command from your orb and verify
  # the output is as expected, otherwise the job should fail.
  #
  # Rename this job and add more as needed.
  #
  integration-test-ubuntu:
    executor: orb-tools/ubuntu
    steps:
      - checkout
      - test-s/install
      - run: secrethub --version

  integration-test-ubuntu-custom-path:
    executor: orb-tools/ubuntu
    steps:
      - checkout
      - run: mkdir $HOME/test
      - test-s/install:
          install-path: "$HOME/test"
      - run: secrethub --version

  integration-test-ubuntu-specific-version:
    executor: orb-tools/ubuntu
    steps:
      - checkout
      - test-s/install:
          version: 0.32.0
      - run: secrethub --version

  integration-test-alpine:
    executor: orb-tools/alpine
    steps:
      - checkout
      - test-s/install

  integration-test-machine:
    executor: orb-tools/machine
    steps:
      - checkout
      - test-s/install

  integration-test-node:
    executor: orb-tools/node
    steps:
      - checkout
      - test-s/install

  integration-test-node-cci:
    executor: orb-tools/node-cci
    steps:
      - checkout
      - test-s/install

  integration-test-oracle:
    executor: orb-tools/oracle
    steps:
      - checkout
      - test-s/install

  integration-test-macos:
    executor: orb-tools/macos
    steps:
      - checkout
      - test-s/install

workflows:
  # This `lint-pack_validate_publish-dev` workflow will run on any commit.
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing.
      # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: marton/test-s
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # This `integration-tests_prod-release` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-tests_prod-release:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # your integration test jobs go here: essentially, run all your orb's
      # jobs and commands to ensure they behave as expected. or, run other
      # integration tests of your choosing

      # an example job
      - integration-test-ubuntu
      - integration-test-alpine
      - integration-test-machine
      - integration-test-node
      - integration-test-node-cci
      - integration-test-macos
      - integration-test-oracle
      - integration-test-ubuntu-custom-path
      - integration-test-ubuntu-specific-version

      # publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: marton/test-s

          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: false
          requires:
            - integration-test-ubuntu
            - integration-test-alpine
            - integration-test-machine
            - integration-test-node
            - integration-test-node-cci
            - integration-test-macos
            - integration-test-oracle
            - integration-test-ubuntu-custom-path
            - integration-test-ubuntu-specific-version

          filters:
            branches:
              only: master
